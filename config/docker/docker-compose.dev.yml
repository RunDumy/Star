version: "3.8"
services:
  backend:
    image: rundumy/star-backend:latest
    ports:
      - "5000:10000"
    env_file:
      - ./.env.dev
    environment:
      - FLASK_ENV=development
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/postgres
      - JWT_SECRET=test-jwt-secret-key-for-development
      - SECRET_KEY=test-secret-key-for-development
      - ALLOWED_ORIGINS=http://localhost:3000
    depends_on:
      postgres:
        condition: service_healthy

  frontend:
    image: rundumy/star-frontend:latest
    ports:
      - "3000:3000"
    env_file:
      - ./.env.dev
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:5000

  postgres:
    image: postgres:15
    restart: unless-stopped
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./star-backend/database:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    # The service uses the Supabase CLI to emulate the full stack (Postgres, Realtime, Auth, Storage).
    # It mounts the local database schema at /work/database so the CLI can apply it on start.

volumes:
  postgres_data:
